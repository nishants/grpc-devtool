// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.examples.helloworld";
option java_outer_classname = "HelloWorldProto";
option objc_class_prefix = "HLW";

package helloworld.greet;

// The greeting service definition.
service Greeter {
  // Sends a greeting
  rpc SayHello (HelloRequest) returns (HelloReply) {}
  // This is not implemented in config
  rpc StaySilent (HelloRequest) returns (HelloReply) {}
}

// This is not implemented in config
service UnimplementedService {
  // This is not implemented in config
  rpc Unimplemented (HelloRequest) returns (MessageAllTypes) {}
  // This is not implemented in config
  rpc Unimplemented2 (HelloRequest) returns (HelloReply) {}
}

// The request message containing the user's name.
message HelloRequest {
  string name = 1;
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
}

//TODO Add struct, message (reference), enum, map, repeated(array),
// Any, Timestamp, Duration, FieldMask, Wrapper, ListValue
// Value, NullValue, 
message MessageAllTypes {
  double double = 15;
  float float = 1;
  int32 int32 = 2;
  int64 int64 = 3;
  uint32 uint32 = 4;
  uint64 uint64 = 5;
  sint32 sint32 = 6;
  sint64 sint64 = 7;
  fixed32 fixed32 = 8;
  fixed64 fixed64 = 9;
  sfixed32 sfixed32 = 10;
  sfixed64 sfixed64 = 11;
  bool bool = 12;
  string string = 13;
  bytes bytes = 14;
}
